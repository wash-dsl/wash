
.. _program_listing_file__mnt_c_Users_scott_OneDrive_Documents_Coursework_NEA_Assembly_Project_Forms_NEA_Assembly_Project_Forms_bin_Debug_CommandReference.txt:

Program Listing for File CommandReference.txt
=============================================

|exhale_lsh| :ref:`Return to documentation for file <file__mnt_c_Users_scott_OneDrive_Documents_Coursework_NEA_Assembly_Project_Forms_NEA_Assembly_Project_Forms_bin_Debug_CommandReference.txt>` (``/mnt/c/Users/scott/OneDrive/Documents/Coursework/NEA Assembly Project Forms/NEA Assembly Project Forms/bin/Debug/CommandReference.txt``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   ;COMMAND REFERENCE
   ;The operand (last token) can be a register or an immediate address (#1) for all the below commands
   
   MOV R2 #4 ;Move 4 into register 2
   
   MVN R2 R1 ;Logical not of R1 and store in R2
   
   ADD R2 R1 #5 ;Add 5 to R1 and store in R2
   
   SUB R3 R2 R1 ;Subtract R1 from R2 and store in R3
   
   MUL R4 R2 R1 ;Multiply R1 by R2 and store in R4
   
   DIV R4 R2 #22 ;Divide R2 by 22 and store in R4
   
   AND R3 R2 #4 ;Logical AND R2 with 4 and store in R3
   
   ORR R3 R3 #3 ;Logical ORR of R3 and 3 and store in R3
   
   EOR R3 R1 #4 ;Logical Exclusive OR of R1 and 4 and store in R3
   
   LSL R2 R1 #10 ;Left shift R1 by ten bits and store in R2
   
   LSR R2 R1 #2 ;Right shift R2 by two bits and store in R2
   
   LDR R2 34 ;Load the value at memory location 34 in R2
   
   STR R4 3 ;Store the value at R4 in memory location 3
   
   OUT R3 ;Output the value of register 3
   
   OUT #6 ;Can also output a immediate address
   
   
   CMP R2 #6 ;Compare R2 to #6
   BEQ LABEL ;Branch to LABEL if R2 is equal to 6
   
   CMP R3 R2 
   BNE LABEL ;Branch if R3 is not equal to R2
   
   CMP R3 #200
   BGT LABEL ;Branch if R3 is more than 200
   
   CMP R3 #500
   BLT LABEL ;Branch if R3 is less than 500
   
   LABEL: ;This is the position in the code that will be branched to after comparision
   
   HALT ;Ends the program's execution
