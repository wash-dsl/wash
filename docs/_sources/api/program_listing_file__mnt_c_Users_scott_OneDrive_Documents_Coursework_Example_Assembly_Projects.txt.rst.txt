
.. _program_listing_file__mnt_c_Users_scott_OneDrive_Documents_Coursework_Example_Assembly_Projects.txt:

Program Listing for File Example Assembly Projects.txt
======================================================

|exhale_lsh| :ref:`Return to documentation for file <file__mnt_c_Users_scott_OneDrive_Documents_Coursework_Example_Assembly_Projects.txt>` (``/mnt/c/Users/scott/OneDrive/Documents/Coursework/Example Assembly Projects.txt``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

     Doulbing Algorithm
     0       MOV R1, #0 ; 
     1       MOV R2, #1
     2 LOOPUSDOOPUS:ADD R2,R2,R2
     3       ADD R1, R1, #1
     4       CMP R1,#4
     5       BLT LOOPUSDOOPUS
     
    
    
     Multiplication Algorithm
     
     0       MOV R1, #0 ; 
     1       MOV R2, #8 ; What to multiply
     2 LOOPUSDOOPUS:ADD R3,R3,R2
     3       ADD R1, R1, #1
     4       CMP R1,#5 ; How many times to multiply
     5       BLT LOOPUSDOOPUS
     
     
    
    Check if odd or even (Odd if bitwise comparison with 1 equals 1)
     
     0       MOV R1, #69
     1       AND R2,R1,#1
     2       CMP R2, #1
     3       BEQ END
     4       MOV R6, #1 ;is even
     5 END:  HALT
     
     
     
    Convert to two's complement
    
     0       MOV R1, #6
     1       MVN R2, R1
     2       ADD R2, R2, #1
     
     
     
     Multiply by binary shift operation
    
     0       MOV R1, #6
     1       LSL R2,R1,#5
     
     
    
     Multiply by iterative left binary shift operations (one at a  time)
     
     0       MOV R1, #6
     1       MOV R2, #5 ;i
     2 LOOPUS:LSL R1,R1,#1
     3       SUB R2,R2,#1
     4       CMP R2,#0
     5       BNE LOOPUS
     6       HALT 
     
     
    
     Find All Factors of a Number
    
     0       MOV R1, #66 /N
     1       MOV R2, #2 /i
       LOOPUS:
     2       MOV R3,R1 /Assigns R3 to N
       INNERLOOPUS:
     3       SUB R3, R3,R2 /Repeatedly takes away i from N until <= 0
     4       CMP R3,#0
     5       BGT INNERLOOPUS /If greater than 0 keep on looping
     6       BLT NOTFOUND /If less than 0, is not a factor, so try for next i
     7       OUT R2,4 /Is factor, so output i
       NOTFOUND:
     8       ADD R2, R2, #1 /Repeats for every number up to N
     9       CMP R2,R1
    10       BNE LOOPUS
    11       HALT
   
   
         MOV R2,#32
   LOOP:
         OUT R2,7
         ADD R2,R2,#1
         CMP R2,#127
         BLT LOOP
         MOV R2,#10
         OUT R2,7
         HALT
    
   MOV R1, #6
   MOV R2, #6
   ADD R2, R2, #1
   
   
   MOV R1, #0 ; 
   MOV R2, #8 ; What to multiply
   LOOP:
   ADD R3, R3, R2
   ADD R1, R1, #1
   CMP R1, #5 ; How many times to multiply
   BLT LOOP
   
   MOV R1, #0 ; 
   MOV R2, #1
   LOOPUSDOOPUS:
   ADD R2, R2, R2
   ADD R1, R1, #1
   CMP R1, #4
   BLT LOOPUSDOOPUS
   
   MOV R1, #10 ;N
   MOV R2, #2 ;i
   LOOPUS:
   MOV R3, R1 ;Assigns R3 to N
   INNERLOOPUS:
   SUB R3, R3, R2 ;Repeatedly takes away i from N until <= 0
   CMP R3, #0
   BGT INNERLOOPUS ;If greater than 0 keep on looping
   BLT NOTFOUND ;If less than 0, is not a factor, so try for next i
   OUT R2 ;Is factor, so output i
   NOTFOUND:
   ADD R2, R2, #1 ;Repeats for every number up to N
   CMP R2, R1
   BNE LOOPUS
   HALT
   
   MOV R1, #14 ;N
   MOV R2, #8 ;i
   AND R3, R2, R1
   HALT
   
   
   MOV R1, #6
   MOV R2, #5 ;i
   LOOPUS:
    LSL R1, R1, #1
   SUB R2, R2, #1
   CMP R2, #0
   BNE LOOPUS
   HALT 
   
   MOV R3 #3
   MOV R7 #388
   MOV R7 #33
   STR R3 16
   LDR R4 16
   ADD R4 R4 #1
   LSL R4 R4 #3
   OUT R4
   HALT
     
   
   MOV R1 #4
   MUL R2 R1 #5
   DIV R3 R2 #2
   
   MOV R3 #3
   STR R3 16
   ADD R4 R4 #1
   OUT R4
   HALT
